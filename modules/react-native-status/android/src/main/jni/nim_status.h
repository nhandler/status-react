/* Generated by Nim Compiler v1.2.2 */
/*   (c) 2017 Andreas Rumpf */
/* The generated code is subject to the original license. */
#ifndef __nim_status__
#define __nim_status__
#define NIM_INTBITS 32

#include "nimbase.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
typedef struct GoString GoString;
typedef N_CDECL_PTR(void, SignalCallback) (NCSTRING eventMessage);
struct GoString {NCSTRING str;
int length;
};
N_LIB_PRIVATE N_NOCONV(void, signalHandler)(int sign);
N_LIB_PRIVATE N_NIMCALL(NI, getRefcount)(void* p);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, hashMessage)(NCSTRING message);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, initKeystore)(NCSTRING keydir);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, openAccounts)(NCSTRING datadir);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, multiAccountGenerateAndDeriveAddresses)(NCSTRING paramsJSON);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, multiAccountStoreDerivedAccounts)(NCSTRING paramsJSON);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, multiAccountImportMnemonic)(NCSTRING paramsJSON);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, multiAccountImportPrivateKey)(NCSTRING paramsJSON);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, multiAccountDeriveAddresses)(NCSTRING paramsJSON);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, saveAccountAndLogin)(NCSTRING accountData, NCSTRING password, NCSTRING settingsJSON, NCSTRING configJSON, NCSTRING subaccountData);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, callRPC)(NCSTRING inputJSON);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, callPrivateRPC)(NCSTRING inputJSON);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, addPeer)(NCSTRING peer);
N_LIB_PRIVATE N_NIMCALL(void, setSignalEventCallback)(SignalCallback callback);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, sendTransaction)(NCSTRING jsonArgs, NCSTRING password);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, generateAlias)(GoString pk);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, identicon)(GoString pk);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, login)(NCSTRING accountData, NCSTRING password);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, logout)(void);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, verifyAccountPassword)(NCSTRING keyStoreDir, NCSTRING address, NCSTRING password);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, validateMnemonic)(NCSTRING mnemonic);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, recoverAccount)(NCSTRING password, NCSTRING mnemonic);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, startOnboarding)(int n, int mnemonicPhraseLength);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, saveAccountAndLoginWithKeycard)(NCSTRING accountData, NCSTRING password, NCSTRING settingsJSON, NCSTRING configJSON, NCSTRING subaccountData, NCSTRING keyHex);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, hashTransaction)(NCSTRING txArgsJSON);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, extractGroupMembershipSignatures)(NCSTRING signaturePairsStr);
N_LIB_PRIVATE N_NIMCALL(void, connectionChange)(NCSTRING typ, NCSTRING expensive);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, multiformatSerializePublicKey)(NCSTRING key, NCSTRING outBase);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, multiformatDeserializePublicKey)(NCSTRING key, NCSTRING outBase);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, validateNodeConfig)(NCSTRING configJSON);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, loginWithKeycard)(NCSTRING accountData, NCSTRING password, NCSTRING keyHex);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, recover)(NCSTRING rpcParams);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, writeHeapProfile)(NCSTRING dataDir);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, importOnboardingAccount)(NCSTRING id, NCSTRING password);
N_LIB_PRIVATE N_NIMCALL(void, removeOnboarding)(void);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, hashTypedData)(NCSTRING data);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, resetChainData)(void);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, signMessage)(NCSTRING rpcParams);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, signTypedData)(NCSTRING data, NCSTRING address, NCSTRING password);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, stopCPUProfiling)(void);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, getNodesFromContract)(NCSTRING rpcEndpoint, NCSTRING contractAddress);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, exportNodeLogs)(void);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, chaosModeUpdate)(int on);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, signHash)(NCSTRING hexEncodedHash);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, createAccount)(NCSTRING password);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, sendTransactionWithSignature)(NCSTRING txtArgsJSON, NCSTRING sigString);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, startCPUProfile)(NCSTRING dataDir);
N_LIB_PRIVATE N_NIMCALL(void, appStateChange)(NCSTRING state);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, signGroupMembership)(NCSTRING content);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, multiAccountStoreAccount)(NCSTRING paramsJSON);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, multiAccountLoadAccount)(NCSTRING paramsJSON);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, multiAccountGenerate)(NCSTRING paramsJSON);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, multiAccountReset)(void);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, deleteMultiaccount)(NCSTRING keyUID, NCSTRING path);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, migrateKeyStoreDir)(NCSTRING accountData, NCSTRING password, NCSTRING oldKeystoreDir, NCSTRING multiaccountKeystoreDir);
N_LIB_PRIVATE N_NIMCALL(void, startWallet)(void);
N_LIB_PRIVATE N_NIMCALL(void, stopWallet)(void);
N_CDECL(void, NimMain)(void);
#endif /* __nim_status__ */
